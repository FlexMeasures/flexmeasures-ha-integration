{
    "config": {
        "abort": {
            "already_configured": "Device is already configured"
        },
        "error": {
            "cannot_connect": "Failed to connect",
            "invalid_auth": "Invalid authentication",
            "invalid_email": "Invalid email",
            "unknown": "Unexpected error"
        },
        "step": {
            "reauth_confirm": {
                "data": {
                    "consumption_price_sensor": "Consumption price sensor",
                    "fill_level_sensor_id": "fill_level_sensor_id",
                    "fill_rate_sensor_id": "fill_rate_sensor_id",
                    "host": "Host",
                    "nes_efficiency_sensor_id": "nes_efficiency_sensor_id",
                    "nes_fill_rate_sensor_id": "nes_fill_rate_sensor_id",
                    "password": "Password",
                    "power_sensor": "Power sensor",
                    "production_price_sensor": "Production price sensor",
                    "rm_discharge_sensor": "Resource Manager Discharge Sensor",
                    "schedule_duration": "Schedule Duration",
                    "soc_max": "Maximum SOC",
                    "soc_maxima_sensor_id": "soc_maxima_sensor_id",
                    "soc_min": "Minimum SOC",
                    "soc_minima_sensor_id": "soc_minima_sensor_id",
                    "soc_unit": "SOC unit",
                    "thp_efficiency_sensor_id": "thp_efficiency_sensor_id",
                    "thp_fill_rate_sensor_id": "thp_fill_rate_sensor_id",
                    "usage_forecast_sensor_id": "usage_forecast_sensor_id",
                    "username": "Username"
                },
                "data_description": {
                    "consumption_price_sensor": "The sensor that provides the consumption price data.",
                    "fill_level_sensor_id": "fill_level_sensor_id",
                    "fill_rate_sensor_id": "fill_rate_sensor_id",
                    "host": "The URL of the FlexMeasures instance.",
                    "nes_efficiency_sensor_id": "nes_efficiency_sensor_id",
                    "nes_fill_rate_sensor_id": "nes_fill_rate_sensor_id",
                    "password": "The password to log in to the FlexMeasures instance.",
                    "power_sensor": "The sensor that provides the power data.",
                    "production_price_sensor": "The sensor that provides the production price data. Can be the same as the consumption price sensor.",
                    "rm_discharge_sensor": "The sensor that provides the resource manager discharge data.",
                    "schedule_duration": "The duration of the schedule in minutes.",
                    "soc_max": "The maximum state of charge.",
                    "soc_maxima_sensor_id": "soc_maxima_sensor_id",
                    "soc_min": "The minimum state of charge.",
                    "soc_minima_sensor_id": "soc_minima_sensor_id",
                    "soc_unit": "The unit of the state of charge.",
                    "thp_efficiency_sensor_id": "thp_efficiency_sensor_id",
                    "thp_fill_rate_sensor_id": "thp_fill_rate_sensor_id",
                    "usage_forecast_sensor_id": "usage_forecast_sensor_id",
                    "username": "The email to log in to the FlexMeasures instance."
                }
            },
            "user": {
                "data": {
                    "consumption_price_sensor": "Consumption price sensor",
                    "fill_level_sensor_id": "fill_level_sensor_id",
                    "fill_rate_sensor_id": "fill_rate_sensor_id",
                    "host": "Host",
                    "nes_efficiency_sensor_id": "nes_efficiency_sensor_id",
                    "nes_fill_rate_sensor_id": "nes_fill_rate_sensor_id",
                    "password": "Password",
                    "power_sensor": "Power sensor",
                    "production_price_sensor": "Production price sensor",
                    "rm_discharge_sensor": "Resource Manager Discharge Sensor",
                    "schedule_duration": "Schedule Duration",
                    "soc_max": "Maximum SOC",
                    "soc_maxima_sensor_id": "soc_maxima_sensor_id",
                    "soc_min": "Minimum SOC",
                    "soc_minima_sensor_id": "soc_minima_sensor_id",
                    "soc_unit": "SOC unit",
                    "thp_efficiency_sensor_id": "thp_efficiency_sensor_id",
                    "thp_fill_rate_sensor_id": "thp_fill_rate_sensor_id",
                    "usage_forecast_sensor_id": "usage_forecast_sensor_id",
                    "username": "Username"
                },
                "data_description": {
                    "consumption_price_sensor": "The sensor that provides the consumption price data.",
                    "fill_level_sensor_id": "fill_level_sensor_id",
                    "fill_rate_sensor_id": "fill_rate_sensor_id",
                    "host": "The URL of the FlexMeasures instance.",
                    "nes_efficiency_sensor_id": "nes_efficiency_sensor_id",
                    "nes_fill_rate_sensor_id": "nes_fill_rate_sensor_id",
                    "password": "The password to log in to the FlexMeasures instance.",
                    "power_sensor": "The sensor that provides the power data.",
                    "production_price_sensor": "The sensor that provides the production price data. Can be the same as the consumption price sensor.",
                    "rm_discharge_sensor": "The sensor that provides the resource manager discharge data.",
                    "schedule_duration": "The duration of the schedule in minutes.",
                    "soc_max": "The maximum state of charge.",
                    "soc_maxima_sensor_id": "soc_maxima_sensor_id",
                    "soc_min": "The minimum state of charge.",
                    "soc_minima_sensor_id": "soc_minima_sensor_id",
                    "soc_unit": "The unit of the state of charge.",
                    "thp_efficiency_sensor_id": "thp_efficiency_sensor_id",
                    "thp_fill_rate_sensor_id": "thp_fill_rate_sensor_id",
                    "usage_forecast_sensor_id": "usage_forecast_sensor_id",
                    "username": "The email to log in to the FlexMeasures instance."
                }
            }
        }
    },
    "entity": {
        "sensor": {
            "power": {
                "name": "FlexMeasures power sensor"
            }
        }
    },
    "options": {
        "abort": {
            "already_configured": "Device is already configured"
        },
        "error": {
            "cannot_connect": "Failed to connect",
            "invalid_auth": "Invalid authentication",
            "invalid_email": "Invalid email",
            "unknown": "Unexpected error"
        },
        "step": {
            "init": {
                "data": {
                    "consumption_price_sensor": "Consumption price sensor",
                    "fill_level_sensor_id": "fill_level_sensor_id",
                    "fill_rate_sensor_id": "fill_rate_sensor_id",
                    "host": "Host",
                    "nes_efficiency_sensor_id": "nes_efficiency_sensor_id",
                    "nes_fill_rate_sensor_id": "nes_fill_rate_sensor_id",
                    "password": "Password",
                    "power_sensor": "Power sensor",
                    "production_price_sensor": "Production price sensor",
                    "rm_discharge_sensor": "Resource Manager Discharge Sensor",
                    "schedule_duration": "Schedule Duration",
                    "soc_max": "Maximum SOC",
                    "soc_maxima_sensor_id": "soc_maxima_sensor_id",
                    "soc_min": "Minimum SOC",
                    "soc_minima_sensor_id": "soc_minima_sensor_id",
                    "soc_unit": "SOC unit",
                    "thp_efficiency_sensor_id": "thp_efficiency_sensor_id",
                    "thp_fill_rate_sensor_id": "thp_fill_rate_sensor_id",
                    "usage_forecast_sensor_id": "usage_forecast_sensor_id",
                    "username": "Username"
                },
                "data_description": {
                    "consumption_price_sensor": "The sensor that provides the consumption price data.",
                    "fill_level_sensor_id": "fill_level_sensor_id",
                    "fill_rate_sensor_id": "fill_rate_sensor_id",
                    "host": "The URL of the FlexMeasures instance.",
                    "nes_efficiency_sensor_id": "nes_efficiency_sensor_id",
                    "nes_fill_rate_sensor_id": "nes_fill_rate_sensor_id",
                    "password": "The password to log in to the FlexMeasures instance.",
                    "power_sensor": "The sensor that provides the power data.",
                    "production_price_sensor": "The sensor that provides the production price data. Can be the same as the consumption price sensor.",
                    "rm_discharge_sensor": "The sensor that provides the resource manager discharge data.",
                    "schedule_duration": "The duration of the schedule in minutes.",
                    "soc_max": "The maximum state of charge.",
                    "soc_maxima_sensor_id": "soc_maxima_sensor_id",
                    "soc_min": "The minimum state of charge.",
                    "soc_minima_sensor_id": "soc_minima_sensor_id",
                    "soc_unit": "The unit of the state of charge.",
                    "thp_efficiency_sensor_id": "thp_efficiency_sensor_id",
                    "thp_fill_rate_sensor_id": "thp_fill_rate_sensor_id",
                    "usage_forecast_sensor_id": "usage_forecast_sensor_id",
                    "username": "The email to log in to the FlexMeasures instance."
                }
            }
        }
    },
    "services": {
        "change_control_type": {
            "description": "Change the CEM control type.",
            "fields": {
                "control_type": {
                    "description": "CEM control type.",
                    "name": "Control Type"
                }
            },
            "name": "Change Control Type"
        },
        "trigger_and_get_schedule": {
            "description": "Trigger a schedule in FlexMeasures and get the results back.",
            "fields": {
                "soc_at_start": {
                    "description": "Initial state of charge of the energy storage.",
                    "name": "Initial SOC"
                }
            },
            "name": "Trigger and get schedule"
        }
    }
}